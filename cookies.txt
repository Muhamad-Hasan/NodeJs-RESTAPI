var createError = require('http-errors');
var express = require('express');
var path = require('path');
var session = require('express-session');
var FileStore = require('session-file-store')(session);
const usersRouter = require('./routes/users');
const cookieParser = require('cookie-parser');
const accountRouter = require('./routes/accountRoutes');
const RemmitanceRouter = require('./routes/Remmittence');

const mongoose = require('mongoose');
const url = 'mongodb://localhost:27017/RapidRemit';
const connect = mongoose.connect(url ,{ useNewUrlParser: true });

connect.then((db) => {
    console.log("Connected correctly to server");
}, (err) => { console.log(err); });
var app = express();
//app.use(cookieParser('12345-67890-09876-54321'));
app.use(express.json());
app.use(express.urlencoded({extended :false}))
app.use(cookieParser('12345-67890-09876-54321'));






/*app.use(session({
    name: 'session-id',
    secret: '12345-67890-09876-54321',
    saveUninitialized: false,
    resave: false,
    store: new FileStore()
  }));
*/
  
  function auth (req, res, next) {
    console.log(req.signedCookies);
if(!req.signedCookies.user){
    var authHeader = req.headers.authorization;

    if(!authHeader){
        var err = new Error("yoy are not authyicayed!");
        res.setHeader('www-Authenticate','Basic');
        err.status = 401;
        return next(err);

    }

    var auth = new Buffer.from(authHeader.split(' ')[1], 'base64').toString().split(':')

    var username = auth[0];
    var password = auth[1];
    if(username === 'admin' && password === 'password'){
        res.cookie('user' , 'admin' ,{signed:true})
        next();

    }
    else {
        var err = new Error("yoy are not authyicayed!");
        res.setHeader('www-Authenticate','Basic');
        err.status = 401;
        return next(err);

    }
    
}
else {
    if(req.signedCookies.user ==='admin'){
        next();
    }       
    else{
        var err = new Error("yoy are not authyicayed!");
        err.status = 401;
        return next(err);

    }
}
    
    }
app.use(auth);
//app.use('/account',usersRouter);

app.use('/account',accountRouter);

app.use('/remmitance',RemmitanceRouter);



module.exports=app